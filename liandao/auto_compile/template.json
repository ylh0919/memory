{
    "//":"LFConstants.h",
    "0":"    SOURCE_{0} = {1}",
    "1":"        {{SOURCE_{0},\"{1}\"}}",
    "2":"#define EXCHANGE_{0} \"{0}\"",
    "3":"#define EXCHANGE_ID_{0} {1}",
    "4":"const int MSG_TYPE_LF_QRY_POS_{0}       = {1}201;\nconst int MSG_TYPE_LF_RSP_POS_{0}       = {1}202;\nconst int MSG_TYPE_LF_ORDER_{0}         = {1}204;\nconst int MSG_TYPE_LF_RTN_ORDER_{0}     = {1}205;\nconst int MSG_TYPE_LF_RTN_TRADE_{0}     = {1}206;\nconst int MSG_TYPE_LF_ORDER_ACTION_{0}  = {1}207;\nconst int MSG_TYPE_LF_QRY_ACCOUNT_{0}   = {1}208;\nconst int MSG_TYPE_LF_RSP_ACCOUNT_{0}   = {1}209;\nconst int MSG_TYPE_LF_WITHDRAW_{0}      = {1}210;\nconst int MSG_TYPE_LF_INNER_TRANSFER_{0}  = {1}211;\nconst int MSG_TYPE_LF_TRANSFER_HISTORY_{0} = {1}212; ",
    "//":"LFUtils.h",
    "5":"       case EXCHANGE_ID_{0}: return EXCHANGE_{0};",
    "6":"    if(exchange_name.compare(EXCHANGE_{0}) == 0) return EXCHANGE_ID_{0};",
    "//":"longfist_constants.py",
    "7":"    {0} = {1}",
    "8":"    {0} = '{0}'",
    "9":"    MSG_TYPE_LF_QRY_POS_{0}             = {1}201    \n    MSG_TYPE_LF_RSP_POS_{0}           = {1}202\n    MSG_TYPE_LF_ORDER_{0}             = {1}204\n    MSG_TYPE_LF_RTN_ORDER_{0}         = {1}205\n    MSG_TYPE_LF_RTN_TRADE_{0}         = {1}206\n    MSG_TYPE_LF_ORDER_ACTION_{0}      = {1}207\n    MSG_TYPE_LF_QRY_ACCOUNT_{0}      = {1}208\n    MSG_TYPE_LF_RSP_ACCOUNT_{0}      = {1}209\n    MSG_TYPE_LF_WITHDRAW_{0}          = {1}210\n    MSG_TYPE_LF_INNER_TRANSFER_{0}    = {1}211\n    MSG_TYPE_LF_TRANSFER_HISTORY_{0}  = {1}212\n",
    "//":"longfist_structs.py",
    "10":",\n\n    lf.MsgTypes.MSG_TYPE_LF_QRY_POS_{0}: LFQryPositionField,\n    lf.MsgTypes.MSG_TYPE_LF_RSP_POS_{0}: LFRspPositionField,\n    lf.MsgTypes.MSG_TYPE_LF_ORDER_{0}: LFInputOrderField,\n    lf.MsgTypes.MSG_TYPE_LF_RTN_ORDER_{0}: LFRtnOrderField,\n    lf.MsgTypes.MSG_TYPE_LF_RTN_TRADE_{0}: LFRtnTradeField,\n    lf.MsgTypes.MSG_TYPE_LF_ORDER_ACTION_{0}: LFOrderActionField,\n    lf.MsgTypes.MSG_TYPE_LF_WITHDRAW_{0}: LFWithdrawField,\n    lf.MsgTypes.MSG_TYPE_LF_INNER_TRANSFER_{0}: LFTransferField,\n    lf.MsgTypes.MSG_TYPE_LF_TRANSFER_HISTORY_{0}: LFTransferHistoryField,\n    lf.MsgTypes.MSG_TYPE_LF_QRY_ACCOUNT_{0}: LFQryAccountField,\n    lf.MsgTypes.MSG_TYPE_LF_RSP_ACCOUNT_{0}: LFRspAccountField",
    "//":"constants.py",
    "//":"wc_configs.py",
    "11":"('{0}', {1}, '')",
    "12":"mkdir -p $KUNGFU_JOURNAL_DIR/MD/{0}\nmkdir -p $KUNGFU_JOURNAL_DIR/MD_RAW/{0}\nmkdir -p $KUNGFU_JOURNAL_DIR/TD/{0}\nmkdir -p $KUNGFU_JOURNAL_DIR/TD_RAW/{0}\nmkdir -p $KUNGFU_JOURNAL_DIR/TD_SEND/{0}\nmkdir -p $KUNGFU_JOURNAL_DIR/TD_Q/{0}\n",
    "md_cmakelists_CTP":"#SET(CTP_SOURCE_FILES MDEngineCTP.cpp MDEngineCTP.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h)\n#ADD_LIBRARY(ctpmd SHARED ${CTP_SOURCE_FILES})\n#TARGET_LINK_LIBRARIES(ctpmd journal kflog thostmduserapi ${Boost_LIBRARIES})\n#INSTALL(TARGETS ctpmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_XTP":"#SET(XTP_SOURCE_FILES MDEngineXTP.cpp MDEngineXTP.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h)\n#ADD_LIBRARY(xtpmd SHARED ${XTP_SOURCE_FILES})\n#TARGET_LINK_LIBRARIES(xtpmd journal kflog xtpquoteapi ${Boost_LIBRARIES})\n#INSTALL(TARGETS xtpmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_BINANCE":"SET(BINANCE_SOURCE_FILES MDEngineBinance.cpp MDEngineBinance.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(binancemd SHARED ${BINANCE_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(binancemd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS binancemd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_BINANCE2":"SET(BINANCE2_SOURCE_FILES MDEngineBinance2.cpp MDEngineBinance2.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(binance2md SHARED ${BINANCE2_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(binance2md ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS binance2md DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_COINMEX":"SET(COINMEX_SOURCE_FILES MDEngineCoinmex.cpp MDEngineCoinmex.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(coinmexmd SHARED ${COINMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(coinmexmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS coinmexmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_MOCK":"SET(MOCK_SOURCE_FILES MDEngineMock.cpp MDEngineMock.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(mockmd SHARED ${MOCK_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(mockmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS mockmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_BITMAX":"SET(BITMAX_SOURCE_FILES MDEngineBitmax.cpp MDEngineBitmax.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(bitmaxmd SHARED ${BITMAX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitmaxmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bitmaxmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_BITFINEX":"SET(BITFINEX_SOURCE_FILES MDEngineBitfinex.cpp MDEngineBitfinex.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(bitfinexmd SHARED ${BITFINEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitfinexmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bitfinexmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_BITMEX":"SET(BITMEX_SOURCE_FILES MDEngineBitmex.cpp MDEngineBitmex.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(bitmexmd SHARED ${BITMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitmexmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bitmexmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_HITBTC":"SET(HITBTC_SOURCE_FILES MDEngineHitBTC.cpp MDEngineHitBTC.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(hitbtcmd SHARED ${HITBTC_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(hitbtcmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS hitbtcmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_OCEANEX":"SET(OCEANEX_SOURCE_FILES MDEngineOceanEx.cpp MDEngineOceanEx.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(oceanexmd SHARED ${OCEANEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(oceanexmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS oceanexmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_HUOBI":"SET(HUOBI_SOURCE_FILES MDEngineHuobi.cpp MDEngineHuobi.h  IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/ld_utils.h ../../utils/common/ld_utils.cpp)\nADD_LIBRARY(huobimd SHARED ${HUOBI_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(huobimd ${COMMON_LIBRARIES} ${Boost_LIBRARIES}  ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS huobimd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_EMX":"SET(EMX_SOURCE_FILES MDEngineEmx.cpp MDEngineEmx.h  IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/ld_utils.h ../../utils/common/ld_utils.cpp)\nADD_LIBRARY(emxmd SHARED ${EMX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(emxmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES}  ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS emxmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_KRAKEN":"SET(KRAKEN_SOURCE_FILES MDEngineKraken.cpp MDEngineKraken.h  IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/ld_utils.h ../../utils/common/ld_utils.cpp)\nADD_LIBRARY(krakenmd SHARED ${KRAKEN_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(krakenmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES}  ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS krakenmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_PROBIT":"SET(PROBIT_SOURCE_FILES MDEngineProbit.cpp MDEngineProbit.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(probitmd SHARED ${PROBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(probitmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS probitmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_UPBIT":"SET(UPBIT_SOURCE_FILES MDEngineUpbit.cpp MDEngineUpbit.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(upbitmd SHARED ${UPBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(upbitmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS upbitmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_ERISX":"SET(ERISX_SOURCE_FILES MDEngineErisX.cpp MDEngineErisX.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(erisxmd SHARED ${ERISX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(erisxmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS erisxmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_BITHUMB":"SET(BITHUMB_SOURCE_FILES MDEngineBithumb.cpp MDEngineBithumb.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(bithumbmd SHARED ${BITHUMB_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bithumbmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bithumbmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_DAYBIT":"SET(DAYBIT_SOURCE_FILES MDEngineDaybit.cpp MDEngineDaybit.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/Utils.h ../../utils/common/Utils.cpp)\nADD_LIBRARY(daybitmd SHARED ${DAYBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(daybitmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES}  ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS daybitmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_KUCOIN":"SET(KUCOIN_SOURCE_FILES MDEngineKuCoin.cpp MDEngineKuCoin.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/Utils.h ../../utils/common/Utils.cpp)\nADD_LIBRARY(kucoinmd SHARED ${KUCOIN_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(kucoinmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS kucoinmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_KUMEX":"SET(KUMEX_SOURCE_FILES MDEngineKumex.cpp MDEngineKumex.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/Utils.h ../../utils/common/Utils.cpp)\nADD_LIBRARY(kumexmd SHARED ${KUMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(kumexmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS kumexmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_DERIBIT":"SET(DERIBIT_SOURCE_FILES MDEngineDeribit.cpp MDEngineDeribit.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/Utils.h ../../utils/common/Utils.cpp)\nADD_LIBRARY(deribitmd SHARED ${DERIBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(deribitmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS deribitmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_COINFLEX":"SET(COINFLEX_SOURCE_FILES MDEngineCoinFlex.cpp MDEngineCoinFlex.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(coinflexmd SHARED ${COINFLEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(coinflexmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS coinflexmd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_COINFLOOR":"SET(COINFLOOR_SOURCE_FILES MDEngineCoinfloor.cpp MDEngineCoinfloor.h IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h)\nADD_LIBRARY(coinfloormd SHARED ${COINFLOOR_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(coinfloormd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS coinfloormd DESTINATION \"lib/wingchun\")\n",
    "md_cmakelists_HBDM":"SET(HBDM_SOURCE_FILES MDEngineHbdm.cpp MDEngineHbdm.h  IMDEngine.cpp IMDEngine.h ../base/IEngine.cpp ../base/IEngine.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h PriceBook20Assembler.cpp PriceBook20Assembler.h ../../utils/common/ld_utils.h ../../utils/common/ld_utils.cpp)\nADD_LIBRARY(hbdmmd SHARED ${HBDM_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(hbdmmd ${COMMON_LIBRARIES} ${Boost_LIBRARIES}  ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/zlib/lib/libz.so.1.2.11)\nINSTALL(TARGETS hbdmmd DESTINATION \"lib/wingchun\")",
    "td_cmakelists_CTP":"#SET(CTP_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineCTP.cpp TDEngineCTP.h)\n#ADD_LIBRARY(ctptd SHARED ${CTP_SOURCE_FILES})\n#TARGET_LINK_LIBRARIES(ctptd journal kflog thosttraderapi ${Boost_LIBRARIES})\n#INSTALL(TARGETS ctptd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_XTP":"#SET(XTP_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineXTP.cpp TDEngineXTP.h)\n#ADD_LIBRARY(xtptd SHARED ${XTP_SOURCE_FILES})\n#TARGET_LINK_LIBRARIES(xtptd journal kflog xtptraderapi ${Boost_LIBRARIES})\n#INSTALL(TARGETS xtptd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BINANCE":"SET(BINANCE_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBinance.cpp TDEngineBinance.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../base/InterfaceMgr.cpp ../base/InterfaceMgr.h)\nADD_LIBRARY(binancetd SHARED ${BINANCE_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(binancetd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS binancetd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BINANCE2":"SET(BINANCE2_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBinance2.cpp TDEngineBinance2.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../base/InterfaceMgr.cpp ../base/InterfaceMgr.h)\nADD_LIBRARY(binance2td SHARED ${BINANCE2_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(binance2td ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS binance2td DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_COINMEX":"SET(COINMEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineCoinmex.cpp TDEngineCoinmex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(coinmextd SHARED ${COINMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(coinmextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS coinmextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_MOCK":"SET(MOCK_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineMock.cpp TDEngineMock.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(mocktd SHARED ${MOCK_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(mocktd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS mocktd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITMAX":"SET(BITMAX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBitmax.cpp TDEngineBitmax.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(bitmaxtd SHARED ${BITMAX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitmaxtd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS bitmaxtd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITFINEX":"SET(BITFINEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBitfinex.cpp TDEngineBitfinex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(bitfinextd SHARED ${BITFINEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitfinextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bitfinextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITTREX":"SET(BITTREX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBittrex.cpp TDEngineBittrex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(bittrextd SHARED ${BITTREX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bittrextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bittrextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITMEX":"SET(BITMEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBitmex.cpp TDEngineBitmex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(bitmextd SHARED ${BITMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitmextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bitmextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_HITBTC":"SET(HITBTC_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineHitBTC.cpp TDEngineHitBTC.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(hitbtctd SHARED ${HITBTC_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(hitbtctd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS hitbtctd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_OCEANEX":"SET(OCEANEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineOceanEx.cpp TDEngineOceanEx.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(oceanextd SHARED ${OCEANEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(oceanextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS oceanextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_OCEANEXB":"SET(OCEANEXB_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineOceanEx2.cpp TDEngineOceanEx2.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(oceanexbtd SHARED ${OCEANEXB_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(oceanexbtd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS oceanexbtd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_PROBIT":"SET(PROBIT_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineProbit.cpp TDEngineProbit.h  ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(probittd SHARED ${PROBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(probittd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS probittd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITHUMB":"SET(BITHUMB_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBithumb.cpp TDEngineBithumb.h  ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(bithumbtd SHARED ${BITHUMB_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bithumbtd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS bithumbtd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_UPBIT":"SET(UPBIT_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineUpbit.cpp TDEngineUpbit.h  ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(upbittd SHARED ${UPBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(upbittd journal kflog ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so ${CMAKE_SOURCE_DIR}/utils/uuid/lib/libuuid.so)\nINSTALL(TARGETS upbittd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_DAYBIT":"SET(DAYBIT_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineDaybit.cpp TDEngineDaybit.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(daybittd SHARED ${DAYBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(daybittd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS daybittd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_KRAKEN":"SET(KRAKEN_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineKraken.cpp TDEngineKraken.h  ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(krakentd SHARED ${KRAKEN_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(krakentd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS krakentd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITFLYER":"SET(BITFLYER_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBitflyer.cpp TDEngineBitflyer.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../base/InterfaceMgr.cpp ../base/InterfaceMgr.h)\nADD_LIBRARY(bitflyertd SHARED ${BITFLYER_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitflyertd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS bitflyertd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_POLONIEX":"SET(POLONIEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEnginePoloniex.cpp TDEnginePoloniex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(poloniextd SHARED ${POLONIEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(poloniextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS poloniextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_KUCOIN":"SET(KUCOIN_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineKuCoin.cpp TDEngineKuCoin.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(kucointd SHARED ${KUCOIN_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(kucointd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS kucointd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_KUMEX":"SET(KUMEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineKumex.cpp TDEngineKumex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(kumextd SHARED ${KUMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(kumextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS kumextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_EMX":"SET(EMX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineEmx.cpp TDEngineEmx.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(emxtd SHARED ${EMX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(emxtd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS emxtd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_HUOBI":"SET(HUOBI_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineHuobi.cpp TDEngineHuobi.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../base/InterfaceMgr.cpp ../base/InterfaceMgr.h)\nADD_LIBRARY(huobitd SHARED ${HUOBI_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(huobitd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS huobitd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_HBDM":"SET(HBDM_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineHbdm.cpp TDEngineHbdm.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../base/InterfaceMgr.cpp ../base/InterfaceMgr.h)\nADD_LIBRARY(hbdmtd SHARED ${HBDM_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(hbdmtd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS hbdmtd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_BITSTAMP":"SET(BITSTAMP_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineBitstamp.cpp TDEngineBitstamp.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(bitstamptd SHARED ${BITSTAMP_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(bitstamptd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS bitstamptd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_COINFLEX":"SET(COINFLEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineCoinflex.cpp TDEngineCoinflex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../../utils/libecp/include/libecp/ecp.h ../../utils/libecp/include/libecp/ecp.cpp)\nADD_LIBRARY(coinflextd SHARED ${COINFLEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(coinflextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so libgmp.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS coinflextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_COINFLOOR":"SET(COINFLOOR_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineCoinfloor.cpp TDEngineCoinfloor.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h ../../utils/libecp/include/libecp/ecp.h ../../utils/libecp/include/libecp/ecp.cpp)\nADD_LIBRARY(coinfloortd SHARED ${COINFLOOR_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(coinfloortd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so libgmp.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS coinfloortd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_MOCKKUCOIN":"SET(MOCKKUCOIN_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineMockKuCoin.cpp TDEngineMockKuCoin.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(mockkucointd SHARED ${MOCKKUCOIN_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(mockkucointd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS mockkucointd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_MOCKBITMEX":"SET(MOCKBITMEX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineMockBitmex.cpp TDEngineMockBitmex.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(mockbitmextd SHARED ${MOCKBITMEX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(mockbitmextd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so)\nINSTALL(TARGETS mockbitmextd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_ERISX":"SET(ERISX_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineErisX.cpp TDEngineErisX.h  ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(erisxtd SHARED ${ERISX_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(erisxtd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS erisxtd DESTINATION \"lib/wingchun\")\n",
    "td_cmakelists_DERIBIT":"SET(DERIBIT_SOURCE_FILES ${TD_SOURCE_FILES} TDEngineDeribit.cpp TDEngineDeribit.h ../base/CoinPairWhiteList.cpp ../base/CoinPairWhiteList.h)\nADD_LIBRARY(deribittd SHARED ${DERIBIT_SOURCE_FILES})\nTARGET_LINK_LIBRARIES(deribittd ${COMMON_LIBRARIES} ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcpr.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcurl.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libcrypto.so ${CMAKE_SOURCE_DIR}/utils/cpr/lib/libssl.so ${CMAKE_SOURCE_DIR}/utils/libwebsockets/lib/libwebsockets.so)\nINSTALL(TARGETS deribittd DESTINATION \"lib/wingchun\")\n",
    "13":"    loadJournalInfo(SOURCE_{0});"
}